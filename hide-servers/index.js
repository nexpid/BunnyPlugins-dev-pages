(function(exports,plugin,plugins,storage,themes,common,ui,alerts,assets,components,_vendetta,metro,toasts,patcher$1,utils){"use strict";var _findByProps,_findByProps1,_findByProps2,_findByProps3,_findByProps4;const ThemeStore=metro.findByStoreName("ThemeStore");metro.findByProps("triggerHaptic");const colorModule=metro.findByProps("colors","unsafe_rawColors"),colorResolver=colorModule?.internal??colorModule?.meta,TextStyleSheet=metro.findByProps("TextStyleSheet").TextStyleSheet;((_findByProps=metro.findByProps("ActionSheet"))===null||_findByProps===void 0?void 0:_findByProps.ActionSheet)??metro.find(function(x){var _x_render;return((_x_render=x.render)===null||_x_render===void 0?void 0:_x_render.name)==="ActionSheet"});const LazyActionSheet=metro.findByProps("openLazy","hideActionSheet"),{openLazy,hideActionSheet}=LazyActionSheet;metro.findByProps("ActionSheetTitleHeader","ActionSheetCloseButton","ActionSheetContentContainer"),(_findByProps1=metro.findByProps("ActionSheetRow"))===null||_findByProps1===void 0||_findByProps1.ActionSheetRow;const Navigator=metro.findByName("Navigator")??((_findByProps2=metro.findByProps("Navigator"))===null||_findByProps2===void 0?void 0:_findByProps2.Navigator),modalCloseButton=((_findByProps3=metro.findByProps("getRenderCloseButton"))===null||_findByProps3===void 0?void 0:_findByProps3.getRenderCloseButton)??((_findByProps4=metro.findByProps("getHeaderCloseButton"))===null||_findByProps4===void 0?void 0:_findByProps4.getHeaderCloseButton),{popModal,pushModal}=metro.findByProps("popModal","pushModal");function resolveSemanticColor(color){let theme=arguments.length>1&&arguments[1]!==void 0?arguments[1]:ThemeStore.theme;return colorResolver.resolveSemanticColor(theme,color)}function openModal(key,modal){const empty=Symbol("empty");if(!Navigator||!modalCloseButton)return toasts.showToast(`${[Navigator?empty:"Navigator",modalCloseButton?empty:"modalCloseButton"].filter(function(x){return x!==empty}).join(", ")} is missing! Please try reinstalling your client.`,assets.getAssetIDByName("Small"));pushModal({key,modal:{key,modal,animation:"slide-up",shouldPersistUnderModals:!1,closable:!0}})}const{Text:_Text}=components.General;function Text(param){let{variant,lineClamp,color,align,style,onPress,getChildren,children,liveUpdate}=param;const[_,forceUpdate]=common.React.useReducer(function(x){return~x},0);return common.React.useEffect(function(){if(!liveUpdate)return;const nextSecond=new Date().setMilliseconds(1e3);let interval;const timeout=setTimeout(function(){forceUpdate(),interval=setInterval(forceUpdate,1e3)},nextSecond-Date.now());return function(){clearTimeout(timeout),clearInterval(interval)}},[]),common.React.createElement(_Text,{style:[variant?TextStyleSheet[variant]:{},color?{color:resolveSemanticColor(ui.semanticColors[color])}:{},align?{textAlign:align}:{},style??{}],numberOfLines:lineClamp,onPress},getChildren?.()??children)}const{View:View$1,Pressable}=components.General;function BetterTableRowTitle(param){let{title,onPress,icon,padding}=param;const styles2=common.stylesheet.createThemedStyleSheet({androidRipple:{color:ui.semanticColors.ANDROID_RIPPLE,cornerRadius:4},icon:{width:16,height:16,marginTop:1.5,tintColor:ui.semanticColors.TEXT_MUTED}}),UseCompontent=onPress?Pressable:View$1;return React.createElement(UseCompontent,{android_ripple:styles2.androidRipple,onPress,style:{marginBottom:8,marginHorizontal:padding?16:0,marginTop:padding?8:0,gap:4,flexDirection:"row",alignItems:"center"}},icon&&React.createElement(common.ReactNative.Image,{style:styles2.icon,source:icon,resizeMode:"cover"}),React.createElement(Text,{variant:"text-sm/semibold",color:"TEXT_MUTED"},title))}function BetterTableRowGroup(param){let{title,onTitlePress,icon,children,padding,nearby}=param;const styles2=common.stylesheet.createThemedStyleSheet({main:{backgroundColor:ui.semanticColors.CARD_PRIMARY_BG,borderColor:ui.semanticColors.BORDER_FAINT,borderWidth:1,borderRadius:16,overflow:"hidden",flex:1}});return React.createElement(View$1,{style:{marginHorizontal:16,marginTop:nearby?8:16}},title?typeof title=="string"?React.createElement(BetterTableRowTitle,{title,onPress:onTitlePress,icon}):title:null,React.createElement(View$1,{style:styles2.main},padding?React.createElement(View$1,{style:{paddingHorizontal:16,paddingVertical:16}},children):children))}var HiddenListEntryType;(function(HiddenListEntryType2){HiddenListEntryType2[HiddenListEntryType2.Folder=0]="Folder",HiddenListEntryType2[HiddenListEntryType2.Guild=1]="Guild"})(HiddenListEntryType||(HiddenListEntryType={}));const{View}=components.General,{FormRow:FormRow$1}=components.Forms,{showSimpleActionSheet}=metro.findByProps("showSimpleActionSheet"),SortedGuildStore$1=metro.findByStoreName("SortedGuildStore"),GuildStore=metro.findByStoreName("GuildStore"),defaultFolderClr="#5865f2",ManageDataPage=function(){storage.useProxy(hiddenList);const[search,setSearch]=common.React.useState(""),guilds=GuildStore.getGuilds(),data=SortedGuildStore$1.getGuildFolders().filter(function(x){return x.folderId?isHidden(HiddenListEntryType.Folder,x.folderId):x.guildIds.every(function(y){return isHidden(HiddenListEntryType.Guild,y)})}).map(function(x){const item=x.folderId?x:guilds[x.guildIds[0]];if(item)return{id:item.folderId??item.id,name:item.folderName??item.name,icon:item.icon,color:item.folderId&&(item.folderColor?common.ReactNative.processColor(item.folderColor):defaultFolderClr),type:item.folderId?HiddenListEntryType.Folder:HiddenListEntryType.Guild}}).filter(function(x){return x&&(x.name??"Unnamed").toLowerCase().includes(search)});return common.React.createElement(common.ReactNative.FlatList,{ListHeaderComponent:common.React.createElement(components.Search,{style:{marginBottom:10},onChangeText:function(x){return setSearch(x.toLowerCase())}}),style:{paddingHorizontal:10,paddingTop:10},contentContainerStyle:{paddingBottom:20},data,renderItem:function(param){let{item}=param;return common.React.createElement(FormRow$1,{label:item.name,leading:item.icon?common.React.createElement(common.ReactNative.Image,{source:{uri:`https://cdn.discordapp.com/icons/${item.id}/${item.icon}.${item.icon.startsWith("a_")?"gif":"png"}?size=32`},style:{height:32,width:32,borderRadius:16}}):common.React.createElement(View,{style:{height:32,width:32,borderRadius:8,backgroundColor:item.color}}),onPress:function(){return showSimpleActionSheet({key:"CardOverflow",header:{title:item.name,onClose:hideActionSheet},options:[{label:"Remove",icon:assets.getAssetIDByName("ic_message_delete"),isDestructive:!0,onPress:function(){toasts.showToast(`Removed ${item.name} from hidden list`,assets.getAssetIDByName("ic_hide_password")),removeHidden(item.type,item.id)}}]})}})},removeClippedSubviews:!0})};function openManageHiddenServersPage(navigation){navigation.push("VendettaCustomPage",{title:"Manage Hidden Servers",render:ManageDataPage})}const{ScrollView}=components.General,{FormRow}=components.Forms,styles=common.stylesheet.createThemedStyleSheet({destructiveIcon:{tintColor:ui.semanticColors.TEXT_DANGER}}),destructiveText={color:"TEXT_DANGER",variant:"text-md/semibold"};function settings(){const navigation=common.NavigationNative.useNavigation();return React.createElement(ScrollView,null,React.createElement(BetterTableRowGroup,{title:"Data",icon:assets.getAssetIDByName("ic_cog_24px")},React.createElement(FormRow,{label:"Manage hidden servers",leading:React.createElement(FormRow.Icon,{source:assets.getAssetIDByName("ic_message_edit")}),trailing:React.createElement(FormRow.Arrow,null),onPress:function(){return openManageHiddenServersPage(navigation)}}),React.createElement(FormRow,{label:React.createElement(Text,destructiveText,"Clear hidden servers"),leading:React.createElement(FormRow.Icon,{style:styles.destructiveIcon,source:assets.getAssetIDByName("ic_message_delete")}),trailing:React.createElement(FormRow.Arrow,null),onPress:function(){return alerts.showConfirmationAlert({title:"Clear data",content:`Are you sure you want to clear **${hiddenList.list.length}** hidden server(s)?`,confirmText:"Clear",confirmColor:"red",onConfirm:function(){return hiddenList.list=[]},isDismissable:!0})}})))}const{inspect}=metro.findByProps("format","inspect");function GuildsWrapper(param){let{ret}=param;var _findInReactTree;storage.useProxy(hiddenList),console.log("ren durrr..."),console.log(`DEBUG\0SAVEFILE\0${JSON.stringify("penis_sex.txt")}\0${JSON.stringify(inspect(ret))}`);const guilds=(_findInReactTree=utils.findInReactTree(ret,function(x){var _x_type;return(x==null||(_x_type=x.type)===null||_x_type===void 0?void 0:_x_type.name)==="Guilds"}))===null||_findInReactTree===void 0?void 0:_findInReactTree.props;if(!guilds)return;const hidden={guilds:[],folders:[]};for(const x of guilds.guildFolders)if(isHidden(HiddenListEntryType.Folder,x.folderId)){hidden.folders.push(x.folderId);for(const g of x.guildIds)hidden.guilds.push(g)}else for(const g of x.guildIds.filter(function(y){return isHidden(HiddenListEntryType.Guild,y)}))hidden.guilds.push(g);for(const g of hidden.guilds){var _guilds_unreadGuilds;(_guilds_unreadGuilds=guilds.unreadGuilds)===null||_guilds_unreadGuilds===void 0||_guilds_unreadGuilds.delete(g),delete guilds.guildReadStates[g]}return guilds.guildFolders=[{index:0,guildIds:["1158475940343595008"],folderId:void 0,folderName:void 0,folderColor:void 0}],console.log("changed :)"),ret}function Modal(props){return!Navigator||!modalCloseButton?null:React.createElement(Navigator,{initialRouteName:props.mkey,screens:{[props.mkey]:Object.assign(utils.without(props,"mkey","children"),{headerLeft:modalCloseButton?.(function(){return popModal(props.mkey)}),render:function(){return props.children}})}})}function ManageHiddenServersModal(){return React.createElement(Modal,{mkey:"MANAGE_HIDDEN_SERVERS",title:"Manage Hidden Servers"},React.createElement(ManageDataPage,null))}var _find,_find1;const SortedGuildStore=metro.findByStoreName("SortedGuildStore"),GuildPopoutMenu=(_find=metro.find(function(x){var _x_default_render,_x_default;return(x==null||(_x_default=x.default)===null||_x_default===void 0||(_x_default_render=_x_default.render)===null||_x_default_render===void 0?void 0:_x_default_render.name)==="GuildPopoutMenu"}))===null||_find===void 0?void 0:_find.default,FolderPopoutMenu=(_find1=metro.find(function(x){var _x_default_render,_x_default;return(x==null||(_x_default=x.default)===null||_x_default===void 0||(_x_default_render=_x_default.render)===null||_x_default_render===void 0?void 0:_x_default_render.name)==="FolderPopoutMenu"}))===null||_find1===void 0?void 0:_find1.default,GuildsConnected=metro.findByName("GuildsConnected",!1),GuildContainer=metro.findByName("GuildContainer",!1);function patcher(){const patches=new Array;return GuildPopoutMenu&&patches.push(patcher$1.after("render",GuildPopoutMenu,function(param,ret){let[{guildId,title}]=param;const clone={...ret};return isHidden(HiddenListEntryType.Guild,guildId)||clone.props.rows.unshift({text:"Hide Server",icon:assets.getAssetIDByName("ic_hide_password"),onClick:function(){addHidden(HiddenListEntryType.Guild,guildId),toasts.showToast(`Hid ${title}`,assets.getAssetIDByName("ic_hide_password"))}}),clone})),FolderPopoutMenu&&patches.push(patcher$1.after("render",FolderPopoutMenu,function(param,ret){let[{title,folderId}]=param;const clone={...ret};return isHidden(HiddenListEntryType.Folder,folderId)||clone.props.rows.unshift({text:"Hide Folder",icon:assets.getAssetIDByName("ic_hide_password"),onClick:function(){addHidden(HiddenListEntryType.Folder,folderId),toasts.showToast(`Hid ${title}`,assets.getAssetIDByName("ic_hide_password"))}}),clone})),GuildContainer?.default&&patches.push(patcher$1.before("default",GuildContainer,function(param){let[{contextMenuProps:{items},children:{props:{guild,guildIds}}}]=param;guild&&!guildIds?items.unshift({label:"Hide Balls",icon:assets.getAssetIDByName("ic_hide_password"),action:function(){addHidden(HiddenListEntryType.Guild,guild.id),toasts.showToast(`Hid ${guild.name}`,assets.getAssetIDByName("ic_hide_password"))}}):!guild&&guildIds&&items.unshift({label:"Hide Ballocks",icon:assets.getAssetIDByName("ic_hide_password"),action:function(){const folder=SortedGuildStore.getGuildFolders().find(function(x){return JSON.stringify(x.guildIds)===JSON.stringify(guildIds)});if(!folder?.folderId)return toasts.showToast("Internal error!",assets.getAssetIDByName("Small"));addHidden(HiddenListEntryType.Folder,folder.folderId),toasts.showToast(`Hid ${folder.folderName}`,assets.getAssetIDByName("ic_hide_password"))}})})),patches.push(patcher$1.after("default",GuildsConnected,function(_,ret){return console.log("FUCK YOU MEAN RET??",ret),common.React.createElement(GuildsWrapper,{ret})})),patches.push(patcher$1.before("TouchableWithoutFeedback",common.ReactNative,function(args){const clone=[...args];return clone[0].accessibilityLabel===common.i18n.Messages.DIRECT_MESSAGES&&(clone[0].onLongPress=function(){return openModal("MANAGE_HIDDEN_SERVERS",ManageHiddenServersModal)}),clone})),patches.push(patcher$1.before("render",common.ReactNative.Pressable.type,function(args){const clone=[...args];return clone[0].accessibilityLabel==="Create or join a server"&&(clone[0].onLongPress=function(){return openModal("MANAGE_HIDDEN_SERVERS",ManageHiddenServersModal)}),clone})),function(){return patches.forEach(function(x){return x()})}}const hiddenList=storage.wrapSync(storage.createStorage({get:function(){return plugin.storage.hidden??{list:[]}},set:function(x){plugin.storage.hidden=x}}));function isHidden(type,id){return hiddenList.list.some(function(x){return x[0]===type&&x[1]===id})}function addHidden(type,id){isHidden(type,id)||(hiddenList.list=[...hiddenList.list,type===HiddenListEntryType.Folder?[type,id]:[type,id]])}function removeHidden(type,id){hiddenList.list=hiddenList.list.filter(function(x){return x[0]!==type||x[1]!==id})}const emitterSymbol=Symbol.for("vendetta.storage.emitter"),emitterAvailable=!!plugins.plugins[emitterSymbol]&&!!themes.themes[emitterSymbol];let unpatch;var index={onLoad:function(){return unpatch=patcher()},onUnload:function(){return unpatch?.()},settings};return exports.addHidden=addHidden,exports.default=index,exports.emitterAvailable=emitterAvailable,exports.emitterSymbol=emitterSymbol,exports.hiddenList=hiddenList,exports.isHidden=isHidden,exports.removeHidden=removeHidden,Object.defineProperty(exports,"__esModule",{value:!0}),exports})({},vendetta.plugin,vendetta.plugins,vendetta.storage,vendetta.themes,vendetta.metro.common,vendetta.ui,vendetta.ui.alerts,vendetta.ui.assets,vendetta.ui.components,vendetta,vendetta.metro,vendetta.ui.toasts,vendetta.patcher,vendetta.utils);
