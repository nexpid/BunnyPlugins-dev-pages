(function(exports,_vendetta,plugin,plugins,themes,utils,metro,common,storage,alerts,assets,components,toasts,ui,patcher$1){"use strict";var constants$1={github:{url:"https://github.com/nexpid/BunnyPlugins/",raw:"https://raw.githubusercontent.com/nexpid/BunnyPlugins/main/"}};metro.find(function(x){return x?.WebView&&!x.default}).WebView,metro.findByProps("SvgXml"),metro.findByProps("isJoi"),metro.findByProps("useSharedValue"),metro.findByProps("FlashList").FlashList;const zustand={create:metro.findByName("create")},RNMMKVManager=common.ReactNative.NativeModules.MMKVManager,RNFileManager=common.ReactNative.NativeModules.DCDFileManager??common.ReactNative.NativeModules.RTNFileManager;common.ReactNative.NativeModules.BundleUpdaterManager,common.ReactNative.NativeModules.DCDSoundManager;const RNFSManager=common.ReactNative.NativeModules.RNFSManager,normalizeFilePath=function(path){return path.startsWith("file://")?path.slice(7):path},getOptions=function(encoding){if(typeof encoding=="string"){if(["utf8","ascii","base64"].includes(encoding))return{encoding};throw new Error(`Invalid encoding type "${String(encoding)}"`)}else return encoding||{encoding:"utf8"}},readFileGeneric=function(filepath,encoding,command){const options=getOptions(encoding);return command(normalizeFilePath(filepath)).then(function(b64){let contents;return options.encoding==="utf8"?contents=Buffer.from(b64,"base64").toString("utf8"):options.encoding==="ascii"?contents=Buffer.from(b64,"base64").toString("ascii"):options.encoding==="base64"&&(contents=b64),contents})},resolveWrite=function(filepath){let write={style:null,path:null};const constants2=RNFileManager.getConstants();if(filepath.startsWith(constants2.DocumentsDirPath))write={style:"documents",path:filepath.slice(constants2.DocumentsDirPath.length+1)};else if(filepath.startsWith(constants2.CacheDirPath))write={style:"cache",path:filepath.slice(constants2.CacheDirPath.length+1)};else throw new Error(`File path "${String(filepath)}" is unsupported on versions <211.6 (not a caches/documents path, missing RNFS)`);return write},RNFS={unlink(filepath){if(RNFSManager)return RNFSManager.unlink(normalizeFilePath(filepath)).then(function(){});const write=resolveWrite(filepath);return RNFileManager.removeFile(write.style,write.path).then(function(){})},exists(filepath){return RNFSManager?RNFSManager.exists(normalizeFilePath(filepath)):RNFileManager.fileExists(normalizeFilePath(filepath))},readFile(filepath,encoding){if(RNFSManager)return readFileGeneric(filepath,encoding,RNFSManager.readFile);{const options=getOptions(encoding);if(options.encoding==="ascii")throw new Error('Encoding type "ascii" is unsupported on versions <211.6 (missing RNFS)');return RNFileManager.readFile(filepath,options.encoding)}},writeFile(filepath,contents,encoding){const options=getOptions(encoding);if(!RNFSManager){if(options.encoding==="ascii")throw new Error('Encoding type "ascii" is unsupported on versions <211.6 (missing RNFS)');const write=resolveWrite(filepath);return RNFileManager.writeFile(write.style,write.path,contents,options.encoding).then(function(){})}let b64;return options.encoding==="utf8"?b64=Buffer.from(contents,"utf8").toString("base64"):options.encoding==="ascii"?b64=Buffer.from(contents,"ascii").toString("base64"):options.encoding==="base64"&&(b64=contents),RNFSManager.writeFile(normalizeFilePath(filepath),b64,options)},mkdir(filepath){if(!RNFSManager)throw new Error("Function 'mkdir' is unsupported on versions <211.6 (missing RNFS)");return RNFSManager.mkdir(normalizeFilePath(filepath),{}).then(function(){})},MainBundlePath:RNFSManager?.RNFSMainBundlePath,get CachesDirectoryPath(){return RNFSManager?.RNFSCachesDirectoryPath??RNFileManager.getConstants().CacheDirPath},ExternalCachesDirectoryPath:RNFSManager?.RNFSExternalCachesDirectoryPath,get DocumentDirectoryPath(){return RNFSManager?.RNFSDocumentDirectoryPath??RNFileManager.getConstants().DocumentsDirPath},DownloadDirectoryPath:RNFSManager?.RNFSDownloadDirectoryPath,ExternalDirectoryPath:RNFSManager?.RNFSExternalDirectoryPath,ExternalStorageDirectoryPath:RNFSManager?.RNFSExternalStorageDirectoryPath,TemporaryDirectoryPath:RNFSManager?.RNFSTemporaryDirectoryPath,LibraryDirectoryPath:RNFSManager?.RNFSLibraryDirectoryPath,PicturesDirectoryPath:RNFSManager?.RNFSPicturesDirectoryPath,FileProtectionKeys:RNFSManager?.RNFSFileProtectionKeys,RoamingDirectoryPath:RNFSManager?.RNFSRoamingDirectoryPath,hasRNFS:!!RNFSManager},variableRules=[/{([^}]+), (select|plural), ?\n?([\s\S]+?)(?=(}})|(} ?\r?\n ?}))/g,/{([^}]+)}/g],replacerRegExp=/(\w+) {([^}]*)} ?/g;function parseVariableRules(text){const rules=[];for(const regex of variableRules){const matches=text.matchAll(regex);for(const rawMatch of Array.from(matches)){const[match,variable,kind,rawReplacers,_suffix1,_suffix2]=rawMatch,{index:index2}=rawMatch,suffix=_suffix1??_suffix2??"";if(!rules.some(function(x){return index2>=x.start&&index2<x.start+x.length}))if(!kind)rules.push({type:"variable",variable,start:index2,length:match.length+suffix.length});else{const replacers=Object.fromEntries(Array.from((rawReplacers+"}").matchAll(replacerRegExp)).map(function(x){return[x[1],x[2]]}));rules.push({type:"choose",kind,variable,start:index2,length:match.length+suffix.length,replacers})}}}return rules}var define_DEFAULT_LANG_default2={"plugin.name":"Cloud Sync",plugins:`{plugins, plural,
=0 {# plugins}
one {# plugin}
other {# plugins}
}`,themes:`{themes, plural,
=0 {# themes}
one {# theme}
other {# themes}
}`,fonts:`{fonts, plural,
=0 {# fonts}
one {# font}
other {# fonts}
}`,"toast.sync.no_import":"Nothing to import.","toast.oauth.authorized":"Successfully authorized!","toast.api.unauthorized":"Unauthorized, try logging out and back in again.","toast.logout":"Successfully logged out.","toast.deleted_data":"Successfully deleted data.","toast.saved_data":"Successfully saved data.","toast.encrypt_fail":"Failed to encrypt!","toast.backup_saved":"Backup Saved to {file}.","toast.backup_download_prepare":"Preparing for download...","toast.decrypt_fail":"Failed to decrypt!","settings.your_data.title":"Your data","settings.your_data.plugins":"plugins","settings.your_data.themes":"themes","settings.your_data.fonts":"fonts","settings.your_data.last_synced":"Last synced: **{date}**","settings.config.title":"Settings","settings.config.auto_save.title":"Auto save","settings.config.auto_save.description":"Automatically save data to the cloud","settings.config.settings_pin.title":"Pin to settings","settings.config.settings_pin.description":"Pin Cloud Sync to the settings page","settings.dev.api_url.title":"API URL","settings.dev.api_url.description":"Custom URL for the Cloud Sync backend API","settings.dev.client_id.title":"Client ID","settings.dev.client_id.description":"Custom client ID for OAuth2","settings.auth.title":"Authorization","settings.auth.log_out.title":"Log out","settings.auth.log_out.description":"Log out of Cloud Sync","settings.auth.delete_data.title":"Delete data","settings.auth.delete_data.description":"Permanently delete your cloud data","settings.auth.authorize":"Authorize","settings.manage_data.title":"Data management","settings.manage_data.save_data.title":"Save data","settings.manage_data.save_data.description":"Save your data to the cloud","settings.manage_data.import_data.description":"Import data from the cloud","settings.manage_data.download_compressed.title":"Download compressed data","settings.manage_data.download_compressed.description":"Download a copy of your compressed data","settings.manage_data.import_compressed.title":"Import compressed data","settings.manage_data.import_compressed.description":"Import a compressed data file","settings.label.auth_needed":"Authorize first to manage your data","sheet.import_data.title":"Import data","sheet.import_data.already_synced":"All addons in the cloud are already imported","sheet.import_data.unproxied_plugins":"Unproxied Plugins ({count})","sheet.import_data.plugins":"Plugins ({count})","sheet.import_data.themes":"Themes ({count})","sheet.import_data.fonts":"Fonts ({count})","sheet.import_data.import":"Import","log.import.start.combo":"Starting to import {plugins}, {themes} and {fonts}","log.import.plugin.success":"Imported plugin: {name}","log.import.plugin.fail":`Failed to import plugin: {name}
{error}`,"log.import.theme.success":"Imported theme: {name}","log.import.theme.fail":`Failed to import theme: {name}
{error}`,"log.import.font.success":"Imported font: {name}","log.import.font.fail":`Failed to import font: {name}
{error}`,"log.import.total":"Imported {plugins}, {themes} and {fonts}","log.import.select_theme.success":"Selected theme: {theme}","log.import.select_theme.fail":"Failed to select theme: {theme}","log.plugins":"PLUGINS","log.themes":"THEMES","log.fonts":"FONTS","log.importer":"IMPORTER","alert.log_out.title":"Log out","alert.log_out.body":"Are you sure you want to log out of Cloud Sync?","alert.delete_data.title":"Delete data","alert.delete_data.body":"Are you sure you want to permanently delete all of your data?","alert.delete_data.confirm":"Delete","alert.save_data.title":"Save data","alert.save_data.body":"Are you sure you want to overwrite your data?","alert.save_data.confirm":"Overwrite","alert.encryption_key.title":"Enter encryption key","alert.encryption_key.placeholder":"secret password","alert.encryption_key.confirm":"Enter","alert.encryption_key.required":"An encryption key must be set.","alert.decryption_key.title":"Enter decryption key","alert.decryption_key.placeholder":"secret password","alert.decryption_key.confirm":"Enter","alert.decryption_key.required":"A decryption key must be set.","alert.unproxied_plugin_warn.title":"Warning","alert.unproxied_plugin_warn.body":"Installing unproxied plugins can be dangerous since they haven't been verified by staff. Are you sure you want to import them?","alert.unproxied_plugin_warn.confirm":"Yes","alert.clear_ignored_plugins.title":"Clear ignored plugins","alert.clear_ignored_plugins.body":"Are you sure you want to clear all ignored plugins?","alert.clear_ignored_plugins.confirm":"Clear","page.import_logs":"Import logs","page.ignored_plugins.title":"Ignored plugins","log.import.result":"Finished! Imported {plugins}, {themes} and {fonts}. {success}","log.import.result.all_success":"All imports were successful.","log.import.result.some_fail":"Some imports failed.","log.import.reload_for_font":"Font {name} was selected. Relaod Discord to apply changes."};function _class_call_check(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function _create_class(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}const IntlMessageFormat=metro.findByName("MessageFormat"),make=function(){return RNFS.hasRNFS&&RNFS.mkdir(`${RNFS.DocumentDirectoryPath}/vendetta/NexpidLang`)},filePath=function(plugin2){return`${RNFS.DocumentDirectoryPath}/vendetta/NexpidLang/${plugin2}.json`},etagPath=function(plugin2){return`${RNFS.DocumentDirectoryPath}/vendetta/NexpidLang/${plugin2}_etag.txt`};let Lang=function(){function Lang2(plugin2){_class_call_check(this,Lang2),_define_property(this,"plugin",void 0),_define_property(this,"values",void 0),_define_property(this,"controller",void 0),_define_property(this,"variableRules",void 0),_define_property(this,"Values",void 0),this.plugin=plugin2,this.values=null,this.controller=new AbortController,this.variableRules={},this.load()}return _create_class(Lang2,[{key:"load",value:async function(){var _this=this;const read=async function(){if(await RNFS.exists(filePath(_this.plugin)))try{_this.values=JSON.parse(await RNFS.readFile(filePath(_this.plugin)))}catch{return}};{const res=await fetch(`${constants$1.github.raw}lang/values/${this.plugin}.json`,{headers:{"cache-control":"public, max-age=20"}});if(!res.ok)return read();make();const lastEtag=await RNFS.exists(etagPath(this.plugin))&&await RNFS.readFile(etagPath(this.plugin)),newEtag=res.headers.get("etag");if(!newEtag)return read();if(newEtag!==lastEtag){RNFS.writeFile(etagPath(this.plugin),newEtag);const txt=await res.text();RNFS.writeFile(filePath(this.plugin),txt);try{this.values=JSON.parse(txt)}catch{return}}else read()}}},{key:"makeVariableRules",value:function(text){const rules=parseVariableRules(text);return this.variableRules=rules,rules}},{key:"unload",value:function(){this.controller.abort()}},{key:"format",value:function(_key,input){var _this_values_locale,_this_values_en,_DEFAULT_LANG;const key=_key,locale=Lang2.getLang();if(!this.values)return String(key);const val=((_this_values_locale=this.values[locale])===null||_this_values_locale===void 0?void 0:_this_values_locale[key])??((_this_values_en=this.values.en)===null||_this_values_en===void 0?void 0:_this_values_en[key])??((_DEFAULT_LANG=define_DEFAULT_LANG_default2)===null||_DEFAULT_LANG===void 0?void 0:_DEFAULT_LANG[key]);return val?(this.variableRules[val]??this.makeVariableRules(val)).length>0?new IntlMessageFormat(val).format(input):val:String(key)}}],[{key:"getLang",value:function(){var _i18n_getLocale;const lang2=((_i18n_getLocale=common.i18n.getLocale())===null||_i18n_getLocale===void 0?void 0:_i18n_getLocale.replace(/-/g,"_"))??"en";return lang2.startsWith("en_")?"en":lang2}},{key:"basicFormat",value:function(text){const rules=[{regex:/\*\*(.*?)\*\*/g,react:function(txt2){return React.createElement(common.ReactNative.Text,{style:{fontWeight:"900"}},txt2)}}],txt=text.split("");let off=0;for(const rule of rules){const matches=Array.from(text.matchAll(rule.regex));for(const match of matches)match[1]&&(txt.splice(match.index-off,match[0].length,rule.react(match[1])),off+=match[0].length-1)}return txt}}]),Lang2}();var _findByProps,_findByProps1,_findByProps2,_findByProps3,_findByProps4;const ThemeStore=metro.findByStoreName("ThemeStore");metro.findByProps("triggerHaptic");const colorModule=metro.findByProps("colors","unsafe_rawColors"),colorResolver=colorModule?.internal??colorModule?.meta,TextStyleSheet=metro.findByProps("TextStyleSheet").TextStyleSheet,ActionSheet=((_findByProps=metro.findByProps("ActionSheet"))===null||_findByProps===void 0?void 0:_findByProps.ActionSheet)??metro.find(function(x){var _x_render;return((_x_render=x.render)===null||_x_render===void 0?void 0:_x_render.name)==="ActionSheet"}),LazyActionSheet=metro.findByProps("openLazy","hideActionSheet"),{openLazy,hideActionSheet}=LazyActionSheet,{ActionSheetTitleHeader,ActionSheetCloseButton,ActionSheetContentContainer}=metro.findByProps("ActionSheetTitleHeader","ActionSheetCloseButton","ActionSheetContentContainer");(_findByProps1=metro.findByProps("ActionSheetRow"))===null||_findByProps1===void 0||_findByProps1.ActionSheetRow,metro.findByName("Navigator")??((_findByProps2=metro.findByProps("Navigator"))===null||_findByProps2===void 0||_findByProps2.Navigator),((_findByProps3=metro.findByProps("getRenderCloseButton"))===null||_findByProps3===void 0?void 0:_findByProps3.getRenderCloseButton)??((_findByProps4=metro.findByProps("getHeaderCloseButton"))===null||_findByProps4===void 0||_findByProps4.getHeaderCloseButton),metro.findByProps("popModal","pushModal");function resolveSemanticColor(color){let theme=arguments.length>1&&arguments[1]!==void 0?arguments[1]:ThemeStore.theme;return colorResolver.resolveSemanticColor(theme,color)}function openSheet(sheet,props){try{openLazy(new Promise(function(x){return x({default:sheet})}),"ActionSheet",props)}catch(e){_vendetta.logger.error(e.stack),toasts.showToast("Got error when opening ActionSheet! Please check debug logs",assets.getAssetIDByName("Smal"))}}function fluxSubscribe(topic,callback){return common.FluxDispatcher.subscribe(topic,callback),function(){return common.FluxDispatcher.unsubscribe(topic,callback)}}const{Text:_Text}=components.General;function Text$1(param){let{variant,lineClamp,color,align,style,onPress,getChildren,children,liveUpdate}=param;const[_,forceUpdate]=common.React.useReducer(function(x){return~x},0);return common.React.useEffect(function(){if(!liveUpdate)return;const nextSecond=new Date().setMilliseconds(1e3);let interval;const timeout=setTimeout(function(){forceUpdate(),interval=setInterval(forceUpdate,1e3)},nextSecond-Date.now());return function(){clearTimeout(timeout),clearInterval(interval)}},[]),common.React.createElement(_Text,{style:[variant?TextStyleSheet[variant]:{},color?{color:resolveSemanticColor(ui.semanticColors[color])}:{},align?{textAlign:align}:{},style??{}],numberOfLines:lineClamp,onPress},getChildren?.()??children)}const{View:View$4,Pressable}=components.General;function BetterTableRowTitle(param){let{title,onPress,icon}=param;const styles2=common.stylesheet.createThemedStyleSheet({androidRipple:{color:ui.semanticColors.ANDROID_RIPPLE},icon:{width:16,height:16,marginTop:1.5,tintColor:ui.semanticColors.TEXT_MUTED}}),UseCompontent=onPress?Pressable:View$4;return React.createElement(UseCompontent,{android_ripple:styles2.androidRipple,disabled:!1,accessibilityRole:"button",onPress,style:{marginBottom:8,gap:4,flexDirection:"row",alignItems:"center"}},icon&&React.createElement(common.ReactNative.Image,{style:styles2.icon,source:icon,resizeMode:"cover"}),React.createElement(Text$1,{variant:"text-sm/semibold",color:"TEXT_MUTED"},title))}function BetterTableRowGroup(param){let{title,onTitlePress,icon,children,padding}=param;const styles2=common.stylesheet.createThemedStyleSheet({main:{backgroundColor:ui.semanticColors.CARD_PRIMARY_BG,borderRadius:16,overflow:"hidden",flex:1}});return React.createElement(View$4,{style:{marginHorizontal:16,marginTop:16}},title&&React.createElement(BetterTableRowTitle,{title,onPress:onTitlePress,icon}),React.createElement(View$4,{style:styles2.main},padding?React.createElement(View$4,{style:{paddingHorizontal:16,paddingVertical:16}},children):children))}const{View:View$3}=components.General;function LineDivider(param){let{addPadding}=param;const styles2=common.stylesheet.createThemedStyleSheet({line:{width:"100%",height:2,backgroundColor:ui.semanticColors.BACKGROUND_ACCENT,borderRadius:2147483647}});return React.createElement(View$3,{style:[{marginTop:16,marginBottom:16},addPadding&&{marginHorizontal:16}]},React.createElement(View$3,{style:styles2.line}))}function createJSONStorage(getStorage,options){let storage2;try{storage2=getStorage()}catch{return}return{getItem:function(name){var _a;const parse=function(str2){return str2===null?null:JSON.parse(str2,void 0)},str=(_a=storage2.getItem(name))!=null?_a:null;return str instanceof Promise?str.then(parse):parse(str)},setItem:function(name,newValue){return storage2.setItem(name,JSON.stringify(newValue,void 0))},removeItem:function(name){return storage2.removeItem(name)}}}const toThenable=function(fn){return function(input){try{const result=fn(input);return result instanceof Promise?result:{then(onFulfilled){return toThenable(onFulfilled)(result)},catch(_onRejected){return this}}}catch(e){return{then(_onFulfilled){return this},catch(onRejected){return toThenable(onRejected)(e)}}}}},oldImpl=function(config,baseOptions){return function(set,get,api2){let options={getStorage:function(){return localStorage},serialize:JSON.stringify,deserialize:JSON.parse,partialize:function(state){return state},version:0,merge:function(persistedState,currentState){return{...currentState,...persistedState}},...baseOptions},hasHydrated=!1;const hydrationListeners=new Set,finishHydrationListeners=new Set;let storage2;try{storage2=options.getStorage()}catch{}if(!storage2)return config(function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];console.warn(`[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`),set(...args)},get,api2);const thenableSerialize=toThenable(options.serialize),setItem=function(){const state=options.partialize({...get()});let errorInSync;const thenable=thenableSerialize({state,version:options.version}).then(function(serializedValue){return storage2.setItem(options.name,serializedValue)}).catch(function(e){errorInSync=e});if(errorInSync)throw errorInSync;return thenable},savedSetState=api2.setState;api2.setState=function(state,replace){savedSetState(state,replace),setItem()};const configResult=config(function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];set(...args),setItem()},get,api2);let stateFromStorage;const hydrate=function(){var _a;if(!storage2)return;hasHydrated=!1,hydrationListeners.forEach(function(cb){return cb(get())});const postRehydrationCallback=((_a=options.onRehydrateStorage)==null?void 0:_a.call(options,get()))||void 0;return toThenable(storage2.getItem.bind(storage2))(options.name).then(function(storageValue){if(storageValue)return options.deserialize(storageValue)}).then(function(deserializedStorageValue){if(deserializedStorageValue)if(typeof deserializedStorageValue.version=="number"&&deserializedStorageValue.version!==options.version){if(options.migrate)return options.migrate(deserializedStorageValue.state,deserializedStorageValue.version);console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}else return deserializedStorageValue.state}).then(function(migratedState){var _a2;return stateFromStorage=options.merge(migratedState,(_a2=get())!=null?_a2:configResult),set(stateFromStorage,!0),setItem()}).then(function(){postRehydrationCallback?.(stateFromStorage,void 0),hasHydrated=!0,finishHydrationListeners.forEach(function(cb){return cb(stateFromStorage)})}).catch(function(e){postRehydrationCallback?.(void 0,e)})};return api2.persist={setOptions:function(newOptions){options={...options,...newOptions},newOptions.getStorage&&(storage2=newOptions.getStorage())},clearStorage:function(){storage2?.removeItem(options.name)},getOptions:function(){return options},rehydrate:function(){return hydrate()},hasHydrated:function(){return hasHydrated},onHydrate:function(cb){return hydrationListeners.add(cb),function(){hydrationListeners.delete(cb)}},onFinishHydration:function(cb){return finishHydrationListeners.add(cb),function(){finishHydrationListeners.delete(cb)}}},hydrate(),stateFromStorage||configResult}},newImpl=function(config,baseOptions){return function(set,get,api2){let options={storage:createJSONStorage(function(){return localStorage}),partialize:function(state){return state},version:0,merge:function(persistedState,currentState){return{...currentState,...persistedState}},...baseOptions},hasHydrated=!1;const hydrationListeners=new Set,finishHydrationListeners=new Set;let storage2=options.storage;if(!storage2)return config(function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];console.warn(`[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`),set(...args)},get,api2);const setItem=function(){const state=options.partialize({...get()});return storage2.setItem(options.name,{state,version:options.version})},savedSetState=api2.setState;api2.setState=function(state,replace){savedSetState(state,replace),setItem()};const configResult=config(function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];set(...args),setItem()},get,api2);api2.getInitialState=function(){return configResult};let stateFromStorage;const hydrate=function(){var _a,_b;if(!storage2)return;hasHydrated=!1,hydrationListeners.forEach(function(cb){var _a2;return cb((_a2=get())!=null?_a2:configResult)});const postRehydrationCallback=((_b=options.onRehydrateStorage)==null?void 0:_b.call(options,(_a=get())!=null?_a:configResult))||void 0;return toThenable(storage2.getItem.bind(storage2))(options.name).then(function(deserializedStorageValue){if(deserializedStorageValue)if(typeof deserializedStorageValue.version=="number"&&deserializedStorageValue.version!==options.version){if(options.migrate)return options.migrate(deserializedStorageValue.state,deserializedStorageValue.version);console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}else return deserializedStorageValue.state}).then(function(migratedState){var _a2;return stateFromStorage=options.merge(migratedState,(_a2=get())!=null?_a2:configResult),set(stateFromStorage,!0),setItem()}).then(function(){postRehydrationCallback?.(stateFromStorage,void 0),stateFromStorage=get(),hasHydrated=!0,finishHydrationListeners.forEach(function(cb){return cb(stateFromStorage)})}).catch(function(e){postRehydrationCallback?.(void 0,e)})};return api2.persist={setOptions:function(newOptions){options={...options,...newOptions},newOptions.storage&&(storage2=newOptions.storage)},clearStorage:function(){storage2?.removeItem(options.name)},getOptions:function(){return options},rehydrate:function(){return hydrate()},hasHydrated:function(){return hasHydrated},onHydrate:function(cb){return hydrationListeners.add(cb),function(){hydrationListeners.delete(cb)}},onFinishHydration:function(cb){return finishHydrationListeners.add(cb),function(){finishHydrationListeners.delete(cb)}}},options.skipHydration||hydrate(),stateFromStorage||configResult}},persist=function(config,baseOptions){return"getStorage"in baseOptions||"serialize"in baseOptions||"deserialize"in baseOptions?(console.warn("[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead."),oldImpl(config,baseOptions)):newImpl(config,baseOptions)},UserStore$1=metro.findByStoreName("UserStore"),useAuthorizationStore=zustand.create(persist(function(set,get){return{token:null,tokens:{},init:function(){var _UserStore_getCurrentUser;return set({token:get().tokens[(_UserStore_getCurrentUser=UserStore$1.getCurrentUser())===null||_UserStore_getCurrentUser===void 0?void 0:_UserStore_getCurrentUser.id]??null})},setToken:function(token){var _UserStore_getCurrentUser;return set({token,tokens:{...get().tokens,[(_UserStore_getCurrentUser=UserStore$1.getCurrentUser())===null||_UserStore_getCurrentUser===void 0?void 0:_UserStore_getCurrentUser.id]:token}})},isAuthorized:function(){return!!get().token}}},{name:"cloudsync-auth",getStorage:function(){return RNMMKVManager},partialize:function(state){return{tokens:state.tokens}},onRehydrateStorage:function(){return function(state){return state.init()}}})),unsubAuthStore=fluxSubscribe("CONNECTION_OPEN",function(){return useAuthorizationStore.persist.rehydrate()}),UserStore=metro.findByStoreName("UserStore"),useCacheStore=zustand.create(function(set,get){return{data:null,dir:{},init:function(){var _UserStore_getCurrentUser;return set({data:get().dir[(_UserStore_getCurrentUser=UserStore.getCurrentUser())===null||_UserStore_getCurrentUser===void 0?void 0:_UserStore_getCurrentUser.id]??null})},updateData:function(data){var _UserStore_getCurrentUser;return set({data,dir:{...get().dir,[(_UserStore_getCurrentUser=UserStore.getCurrentUser())===null||_UserStore_getCurrentUser===void 0?void 0:_UserStore_getCurrentUser.id]:data}})},hasData:function(){return!!get().data}}});function fillData(data){return{...data,at:new Date().toUTCString()}}const unsubCacheStore=fluxSubscribe("CONNECTION_OPEN",function(){return useCacheStore.getState().init()});async function authFetch(url,options){const res=await fetch(url,{...options,headers:{...options?.headers,authorization:useAuthorizationStore.getState().token}});if(res.ok)return res;{const text=await res.text();throw toasts.showToast(text,assets.getAssetIDByName("CircleXIcon")),new Error(text)}}const redirectRoute="api/auth/authorize";async function getData(){var _useCacheStore_getState_data;return await(await authFetch(`${constants.api}api/data`,{headers:{"if-modified-since":(_useCacheStore_getState_data=useCacheStore.getState().data)===null||_useCacheStore_getState_data===void 0?void 0:_useCacheStore_getState_data.at}})).json()}async function saveData(data){return await(await authFetch(`${constants.api}api/data`,{method:"PUT",body:JSON.stringify(data),headers:{"content-type":"application/json"}})).json()}async function getRawData(){return await(await authFetch(`${constants.api}api/data/raw`)).text()}async function decompressRawData(data){return await(await authFetch(`${constants.api}api/data/decompress`,{method:"POST",body:data,headers:{"content-type":"text/plain"}})).json()}async function deleteData(){return await(await authFetch(`${constants.api}api/data`,{method:"DELETE"})).json()}const defaultHost="https://bazinga.cloudsync.nexpid.xyz/",defaultClientId="1120793656878714913",api=function(){return vstorage.custom.host?vstorage.custom.host.endsWith("/")?vstorage.custom.host:`${vstorage.custom.host}/`:defaultHost};var constants={get api(){return api()},raw:`${constants$1.github.raw}plugins/cloud-sync/`,oauth2:{get clientId(){return vstorage.custom.clientId||defaultClientId},get redirectURL(){return`${api()}${redirectRoute}`}}};const{pushModal,popModal}=metro.findByProps("pushModal","popModal"),OAuth2AuthorizeModal=metro.findByName("OAuth2AuthorizeModal");function openOauth2Modal(){pushModal({key:"oauth2-authorize",modal:{key:"oauth2-authorize",modal:OAuth2AuthorizeModal,animation:"slide-up",shouldPersistUnderModals:!1,props:{clientId:constants.oauth2.clientId,redirectUri:constants.oauth2.redirectURL,scopes:["identify"],responseType:"code",permissions:0n,cancelCompletesFlow:!1,callback:async function(param){let{location}=param;if(location)try{const token=await(await authFetch(location)).text();useAuthorizationStore.getState().setToken(token),fillCache(),toasts.showToast(lang.format("toast.oauth.authorized",{}),assets.getAssetIDByName("CircleCheckIcon-primary"))}catch{}},dismissOAuthModal:function(){return popModal("oauth2-authorize")}},closable:!0}})}let isInPage=!1,logged;const logs=[];function clearLogs(){logs.length=0,logged?.()}function addLog(scope,message){logs.push([scope,message]),logged?.()}const logScopes={plugins:"#70d6ff",themes:"#ff70a6",fonts:"#ff9770",importer:"#ffd670"},styles$2=common.stylesheet.createThemedStyleSheet({text:{fontFamily:common.constants.Fonts.CODE_SEMIBOLD||common.constants.Fonts.CODE_NORMAL,includeFontPadding:!1,color:ui.semanticColors.TEXT_NORMAL,marginHorizontal:12,marginTop:24}}),ImportLogsPage=function(){const[_,forceUpdate]=common.React.useReducer(function(x){return~x},0);logged=forceUpdate;const scroller=common.React.useRef();return common.React.useEffect(function(){return isInPage=!0,function(){isInPage=!1}},[]),common.React.createElement(common.ReactNative.ScrollView,{style:{flex:1},ref:scroller,onContentSizeChange:function(){return scroller.current.scrollToEnd({animated:!0})}},common.React.createElement(common.ReactNative.Text,{style:styles$2.text},logs.map(function(param){let[scope,message]=param;return[common.React.createElement(common.ReactNative.Text,{style:[styles$2.text,{color:logScopes[scope]}]},"[",lang.format(`log.${scope}`,{}),"]:"),` ${message}
`]})))};function openImportLogsPage(navigation){navigation.push("VendettaCustomPage",{render:ImportLogsPage,title:lang.format("page.import_logs",{})})}const bunny=window.bunny,rawFonts=bunny.managers.fonts.fonts;function getSelectedFont(){return rawFonts.__selected}function getFonts(){return utils.without(rawFonts,"__selected")}function hasFontBySource(source){let fonts=arguments.length>1&&arguments[1]!==void 0?arguments[1]:getFonts();return Object.values(fonts).some(function(x){return x.__source===source})}function hasFontByName(name){let fonts=arguments.length>1&&arguments[1]!==void 0?arguments[1]:getFonts();return Object.keys(fonts).includes(name)}async function installFont(source,select){return bunny.managers.fonts.installFont(source,select)}async function addFont(font,select){return bunny.managers.fonts.saveFont(font,select)}async function grabEverything(){const sync={plugins:{},themes:{},fonts:{installed:{},custom:[]}};for(const item of Object.values(plugins.plugins)){if(vstorage.config.ignoredPlugins.includes(item.id))continue;const storage$1=await storage.createMMKVBackend(item.id).get();sync.plugins[item.id]={enabled:item.enabled,storage:JSON.stringify(storage$1)}}for(const item of Object.values(themes.themes))sync.themes[item.id]={enabled:item.selected};const selFont=getSelectedFont(),fonts=getFonts();for(const item of Object.values(fonts).filter(function(item2){return item2.__source}))sync.fonts.installed[item.__source]={enabled:selFont===item.name};for(const item of Object.values(fonts).filter(function(item2){return!item2.__source}))sync.fonts.custom.push({...item,enabled:selFont===item.name});return sync}let importCallback;function setImportCallback(fnc){importCallback=fnc}async function importData(data,options){var _ithemes_find;if(!data)return;importCallback?.(!0);const iplugins=[...Object.entries(data.plugins).filter(function(param){let[id]=param;return!plugins.plugins[id]&&!isPluginProxied(id)&&canImport(id)&&options.unproxiedPlugins}),...Object.entries(data.plugins).filter(function(param){let[id]=param;return!plugins.plugins[id]&&isPluginProxied(id)&&canImport(id)&&options.plugins})],ithemes=Object.entries(data.themes).filter(function(param){let[id]=param;return!themes.themes[id]&&options.themes}),fonts=getFonts(),ifonts=Object.entries(data.fonts.installed).filter(function(param){let[id]=param;return!hasFontBySource(id,fonts)&&options.fonts}),icustomFonts=data.fonts.custom.filter(function(param){let{name}=param;return!hasFontByName(name,fonts)&&options.fonts});if(!iplugins[0]&&!ithemes[0]&&!ifonts[0]&&!icustomFonts[0])return importCallback?.(!1),toasts.showToast(lang.format("toast.sync.no_import",{}),assets.getAssetIDByName("CircleXIcon"));clearLogs(),addLog("importer",lang.format("log.import.start.combo",{plugins:lang.format("plugins",{plugins:iplugins.length}),themes:lang.format("themes",{themes:ithemes.length}),fonts:lang.format("fonts",{fonts:ifonts.length+icustomFonts.length})})),isInPage||toasts.showToast(lang.format("log.import.start.combo",{plugins:lang.format("plugins",{plugins:iplugins.length}),themes:lang.format("themes",{themes:ithemes.length}),fonts:lang.format("fonts",{fonts:ifonts.length+icustomFonts.length})}),assets.getAssetIDByName("DownloadIcon"));const status={plugins:0,themes:0,fonts:0};let failedAny=!1,selFont;const bunny2=window.bunny;await Promise.all([...iplugins.map(function(param){let[id,{enabled,storage:storage2}]=param;return new Promise(function(res){storage2&&RNMMKVManager.setItem(id,storage2),plugins.installPlugin(id,enabled).then(function(){status.plugins++,addLog("plugins",lang.format("log.import.plugin.success",{name:id}))}).catch(function(e){failedAny=!0,addLog("plugins",lang.format("log.import.plugin.fail",{name:id,error:e}))}).finally(res)})}),...ithemes.map(function(param){let[id]=param;return new Promise(function(res){return themes.installTheme(id).then(function(){status.themes++,addLog("themes",lang.format("log.import.theme.success",{name:id}))}).catch(function(e){failedAny=!0,addLog("themes",lang.format("log.import.theme.fail",{name:id,error:e}))}).finally(res)})}),...ifonts.map(function(param){let[id,item]=param;return new Promise(function(res){return installFont(id,item.enabled).then(function(){status.fonts++,item.enabled&&(selFont=fonts[id]),addLog("fonts",lang.format("log.import.font.success",{name:id}))}).catch(function(e){failedAny=!0,addLog("fonts",lang.format("log.import.font.fail",{name:id,error:e}))}).finally(res)})}),...icustomFonts.map(function(item){return new Promise(function(res){return addFont(utils.without(item,"enabled"),item.enabled).then(function(){status.fonts++,item.enabled&&(selFont=fonts[item.name]),addLog("fonts",lang.format("log.import.font.success",{name:item.name}))}).catch(function(e){failedAny=!0,addLog("fonts",lang.format("log.import.font.fail",{name:item.name,error:e}))}).finally(res)})})]),isInPage||toasts.showToast(lang.format("log.import.total",{plugins:lang.format("plugins",{plugins:status.plugins}),themes:lang.format("themes",{themes:status.themes}),fonts:lang.format("fonts",{fonts:status.fonts})}),assets.getAssetIDByName("CircleCheckIcon-primary"));const selectTheme=themes.themes[(_ithemes_find=ithemes.find(function(param){let[_,{enabled}]=param;return enabled}))===null||_ithemes_find===void 0?void 0:_ithemes_find[0]];if(selectTheme)try{bunny2.managers.themes.selectTheme(selectTheme),bunny2.managers.themes.applyTheme(selectTheme),addLog("themes",lang.format("log.import.select_theme.success",{theme:selectTheme.id}))}catch{addLog("themes",lang.format("log.import.select_theme.fail",{theme:selectTheme.id}))}addLog("importer",lang.format("log.import.result",{plugins:lang.format("plugins",{plugins:status.plugins}),themes:lang.format("themes",{themes:status.themes}),fonts:lang.format("fonts",{fonts:status.fonts}),success:failedAny?lang.format("log.import.result.some_fail",{}):lang.format("log.import.result.all_success",{})})),selFont&&addLog("fonts",lang.format("log.import.reload_for_font",{name:selFont.name})),importCallback?.(!1)}const{View:View$2,Text}=components.General,styles$1=common.stylesheet.createThemedStyleSheet({count:{...TextStyleSheet["text-lg/bold"],color:ui.semanticColors.TEXT_NORMAL,textAlign:"center"},subtitle:{...TextStyleSheet["text-md/medium"],color:ui.semanticColors.TEXT_MUTED,textAlign:"center"}});function DataStat(param){let{subtitle,count}=param;return React.createElement(View$2,{style:{alignItems:"center",justifyContent:"center",marginHorizontal:16}},React.createElement(Text,{style:styles$1.count},count),React.createElement(Text,{style:styles$1.subtitle},lang.format(subtitle,{})))}const OhFuck=function(prop){return function(){return common.React.useEffect(function(){toasts.showToast("Uh oh, something broke! Search for fckp in Debug Logs!"),console.warn(`Uh oh (fckp)!!
Missing the redesign component: ${prop}. Please bug @nexpid about this on Discord!`)},[]),null}},OhFuckFunction=function(prop){return function(){return toasts.showToast("Uh oh, something broke! Search for fckp in Debug Logs!"),console.warn(`Uh oh (fckp)!!
Missing the redesign function: ${prop}. Please bug @nexpid about this on Discord!`),null}},findThing=function(){for(var _len=arguments.length,props=new Array(_len),_key=0;_key<_len;_key++)props[_key]=arguments[_key];var _findByProps5;return(_findByProps5=metro.findByProps(...props))===null||_findByProps5===void 0?void 0:_findByProps5[props[0]]},findThingRequired=function(){for(var _len=arguments.length,props=new Array(_len),_key=0;_key<_len;_key++)props[_key]=arguments[_key];return findThing(...props)??OhFuck(props[0])},findFuncRequired=function(){for(var _len=arguments.length,props=new Array(_len),_key=0;_key<_len;_key++)props[_key]=arguments[_key];return findThing(...props)??OhFuckFunction(props[0])};function buttonVariantPolyfill(){return"REDESIGN_BUTTON_ACTIVE_TEXT"in ui.semanticColors?{active:"active",destructive:"destructive"}:{active:"positive",destructive:"danger"}}const Button=findThingRequired("Button");findThingRequired("RowButton"),findThing("Slider"),findThingRequired("FloatingActionButton"),findThingRequired("TextInput"),findThingRequired("Tabs"),findThingRequired("SegmentedControlPages"),findFuncRequired("useSegmentedControlState");function managePage(options,navigation){for(var _len=arguments.length,deps=new Array(_len>2?_len-2:0),_key=2;_key<_len;_key++)deps[_key-2]=arguments[_key];navigation||(navigation=common.NavigationNative.useNavigation()),common.React.useEffect(function(){navigation.setOptions(options)},[navigation,...deps])}const{FormCheckboxRow:FormCheckboxRow$1,FormRow:FormRow$2}=components.Forms,IconButton=metro.findByProps("IconButton").IconButton;function IgnoredPluginsPage(){const[search,setSearch]=common.React.useState(""),[_,forceUpdate]=common.React.useReducer(function(x){return~x},0);return common.React.useEffect(function(){setSearch("")},[]),managePage({title:lang.format("page.ignored_plugins.title",{}),headerRight:function(){return common.React.createElement(IconButton,{onPress:function(){return alerts.showConfirmationAlert({title:lang.format("alert.clear_ignored_plugins.title",{}),content:lang.format("alert.clear_ignored_plugins.body",{}),confirmText:lang.format("alert.clear_ignored_plugins.confirm",{}),confirmColor:"red",onConfirm:function(){vstorage.config.ignoredPlugins=[],forceUpdate()}})},disabled:vstorage.config.ignoredPlugins.length===0,icon:assets.getAssetIDByName("TrashIcon"),size:"sm",variant:vstorage.config.ignoredPlugins.length===0?"secondary":buttonVariantPolyfill().destructive})}},void 0,vstorage.config.ignoredPlugins.length),common.React.createElement(common.ReactNative.FlatList,{ListHeaderComponent:common.React.createElement(components.Search,{style:{marginBottom:10},onChangeText:function(x){return setSearch(x.toLowerCase())}}),style:{paddingHorizontal:10,paddingTop:10},contentContainerStyle:{paddingBottom:20},data:Object.entries(plugins.plugins).filter(function(x){var _x__manifest_name;return(_x__manifest_name=x[1].manifest.name)===null||_x__manifest_name===void 0?void 0:_x__manifest_name.toLowerCase().includes(search)}),renderItem:function(param){let{item:[id,item]}=param;return common.React.createElement(FormCheckboxRow$1,{label:item.manifest.name,leading:common.React.createElement(FormRow$2.Icon,{source:assets.getAssetIDByName(item.manifest.vendetta.icon)}),onPress:function(){vstorage.config.ignoredPlugins.includes(id)?vstorage.config.ignoredPlugins.splice(vstorage.config.ignoredPlugins.indexOf(id),1):vstorage.config.ignoredPlugins.push(id),forceUpdate()},selected:vstorage.config.ignoredPlugins.includes(id)})}})}const{View:View$1}=components.General,{FormCheckboxRow}=components.Forms;function ImportActionSheet(param){let{defOptions,data=useCacheStore.getState().data,navigation}=param;const fonts=getFonts(),has={unproxiedPlugins:Object.keys(data.plugins).filter(function(id){return!plugins.plugins[id]&&!isPluginProxied(id)&&canImport(id)}).length,plugins:Object.keys(data.plugins).filter(function(id){return!plugins.plugins[id]&&isPluginProxied(id)&&canImport(id)}).length,themes:Object.keys(data.themes).filter(function(id){return!themes.themes[id]}).length,fonts:Object.keys(data.fonts.installed).filter(function(id){return!hasFontBySource(id,fonts)}).length+data.fonts.custom.filter(function(param2){let{name}=param2;return!hasFontByName(name,fonts)}).length},total=[has.unproxiedPlugins,has.plugins,has.themes].reduce(function(x,a){return x+a},0),[options,setOptions]=common.React.useState(defOptions??{unproxiedPlugins:!1,plugins:!!has.plugins,themes:!!has.themes,fonts:!!has.fonts}),styles2=common.stylesheet.createThemedStyleSheet({icon:{width:18,height:18,tintColor:ui.semanticColors.TEXT_BRAND,marginRight:4},btnIcon:{tintColor:ui.semanticColors.TEXT_NORMAL,marginRight:8}});return common.React.createElement(ActionSheet,null,common.React.createElement(ActionSheetContentContainer,null,common.React.createElement(ActionSheetTitleHeader,{title:lang.format("sheet.import_data.title",{}),trailing:common.React.createElement(ActionSheetCloseButton,{onPress:function(){return hideActionSheet()}})}),!total&&common.React.createElement(common.React.Fragment,null,common.React.createElement(View$1,{style:{flexDirection:"row",alignItems:"center",justifyContent:"center",marginTop:8}},common.React.createElement(common.ReactNative.Image,{source:assets.getAssetIDByName("CircleInformationIcon"),style:styles2.icon,resizeMode:"cover"}),common.React.createElement(Text$1,{variant:"text-md/semibold",color:"TEXT_BRAND",align:"center"},lang.format("sheet.import_data.already_synced",{})))),common.React.createElement(FormCheckboxRow,{label:lang.format("sheet.import_data.unproxied_plugins",{count:String(has.unproxiedPlugins)}),disabled:!has.unproxiedPlugins,onPress:function(){return has.unproxiedPlugins&&(!options.unproxiedPlugins&&!defOptions&&!_vendetta.settings.developerSettings?alerts.showConfirmationAlert({title:lang.format("alert.unproxied_plugin_warn.title",{}),content:lang.format("alert.unproxied_plugin_warn.body",{}),isDismissable:!0,confirmText:lang.format("alert.unproxied_plugin_warn.confirm",{}),onConfirm:function(){return openSheet(ImportActionSheet,{data,navigation,defOptions:{...options,unproxiedPlugins:!0}})}}):setOptions({...options,unproxiedPlugins:!options.unproxiedPlugins}))},selected:options.unproxiedPlugins}),common.React.createElement(FormCheckboxRow,{label:lang.format("sheet.import_data.plugins",{count:String(has.plugins)}),disabled:!has.plugins,onPress:function(){return has.plugins&&setOptions({...options,plugins:!options.plugins})},selected:options.plugins}),common.React.createElement(FormCheckboxRow,{label:lang.format("sheet.import_data.themes",{count:String(has.themes)}),disabled:!has.themes,onPress:function(){return has.themes&&setOptions({...options,themes:!options.themes})},selected:options.themes}),common.React.createElement(FormCheckboxRow,{label:lang.format("sheet.import_data.fonts",{count:String(has.fonts)}),disabled:!has.fonts,onPress:function(){return has.fonts&&setOptions({...options,fonts:!options.fonts})},selected:options.fonts}),common.React.createElement(Button,{text:lang.format("sheet.import_data.import",{}),variant:"primary",size:"md",iconPosition:"start",icon:assets.getAssetIDByName("DownloadIcon"),onPress:function(){openImportLogsPage(navigation),importData(data,options),hideActionSheet()},style:{marginHorizontal:16,marginVertical:16},disabled:!options.unproxiedPlugins&&!options.plugins&&!options.themes&&!options.fonts})))}const DocumentPicker=metro.findByProps("pickSingle","isCancel");metro.findByProps("downloadMediaAsset");const{ScrollView,View}=components.General,{FormRow:FormRow$1,FormInput,FormSwitchRow}=components.Forms;function Settings(){const[showDev,setShowDev]=common.React.useState(!1),[isBusy,setIsBusy]=common.React.useState([]),{data}=useCacheStore();storage.useProxy(vstorage);const setBusy=function(x){return!isBusy.includes(x)&&setIsBusy([...isBusy,x])},unBusy=function(x){return setIsBusy(isBusy.filter(function(y){return x!==y}))};let lastTap=0;const navigation=common.NavigationNative.useNavigation(),{isAuthorized}=useAuthorizationStore();return common.React.createElement(ScrollView,null,common.React.createElement(BetterTableRowGroup,{title:lang.format("settings.your_data.title",{}),icon:assets.getAssetIDByName("MobilePhoneShareIcon"),padding:!0},common.React.createElement(View,{style:{flexDirection:"row",alignItems:"center",justifyContent:"center",marginVertical:8}},common.React.createElement(DataStat,{count:data?Object.keys(data.plugins).length:"-",subtitle:"settings.your_data.plugins"}),common.React.createElement(DataStat,{count:data?Object.keys(data.themes).length:"-",subtitle:"settings.your_data.themes"}),common.React.createElement(DataStat,{count:data?Object.keys(data.fonts.installed).length+data.fonts.custom.length:"-",subtitle:"settings.your_data.fonts"})),data&&common.React.createElement(Text$1,{variant:"text-sm/medium",color:"TEXT_MUTED",align:"center"},Lang.basicFormat(lang.format("settings.your_data.last_synced",{date:new Date(data.at).toLocaleString(common.i18n.getLocale(),{weekday:"long",year:"numeric",month:"long",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric"})})))),common.React.createElement(BetterTableRowGroup,{title:lang.format("settings.config.title",{}),icon:assets.getAssetIDByName("SettingsIcon"),onTitlePress:function(){return lastTap>=Date.now()?(setShowDev(!showDev),lastTap=0):lastTap=Date.now()+500}},common.React.createElement(FormSwitchRow,{label:lang.format("settings.config.auto_save.title",{}),subLabel:lang.format("settings.config.auto_save.description",{}),leading:common.React.createElement(FormRow$1.Icon,{source:assets.getAssetIDByName("RefreshIcon")}),onValueChange:function(){return vstorage.config.autoSync=!vstorage.config.autoSync},value:vstorage.config.autoSync}),common.React.createElement(FormSwitchRow,{label:lang.format("settings.config.settings_pin.title",{}),subLabel:lang.format("settings.config.settings_pin.description",{}),leading:common.React.createElement(FormRow$1.Icon,{source:assets.getAssetIDByName("PinIcon")}),onValueChange:function(){return vstorage.config.addToSettings=!vstorage.config.addToSettings},value:vstorage.config.addToSettings}),common.React.createElement(FormRow$1,{label:lang.format("page.ignored_plugins.title",{}),leading:common.React.createElement(FormRow$1.Icon,{source:assets.getAssetIDByName("ListBulletsIcon")}),trailing:common.React.createElement(FormRow$1.Arrow,null),onPress:function(){return navigation.push("VendettaCustomPage",{render:IgnoredPluginsPage})}}),showDev&&common.React.createElement(common.React.Fragment,null,common.React.createElement(LineDivider,{addPadding:!0}),common.React.createElement(FormRow$1,{label:lang.format("settings.dev.api_url.title",{}),subLabel:lang.format("settings.dev.api_url.description",{}),leading:common.React.createElement(FormRow$1.Icon,{source:assets.getAssetIDByName("PencilIcon")})}),common.React.createElement(FormInput,{title:"",placeholder:defaultHost,value:vstorage.custom.host||defaultHost,onChange:function(x){return vstorage.custom.host=x.length>0?x:null},style:{marginTop:-25,marginHorizontal:12}}),common.React.createElement(FormRow$1,{label:lang.format("settings.dev.client_id.title",{}),subLabel:lang.format("settings.dev.client_id.description",{}),leading:common.React.createElement(FormRow$1.Icon,{source:assets.getAssetIDByName("PencilIcon")})}),common.React.createElement(FormInput,{title:"",placeholder:defaultClientId,value:constants.oauth2.clientId||defaultClientId,onChange:function(x){return vstorage.custom.clientId=x.length>0?x:null},style:{marginTop:-25,marginHorizontal:12}}))),common.React.createElement(BetterTableRowGroup,{title:lang.format("settings.auth.title",{}),icon:assets.getAssetIDByName("LockIcon")},isAuthorized()?common.React.createElement(common.React.Fragment,null,common.React.createElement(FormRow$1,{label:lang.format("settings.auth.log_out.title",{}),subLabel:lang.format("settings.auth.log_out.description",{}),leading:common.React.createElement(FormRow$1.Icon,{source:assets.getAssetIDByName("ic_logout_24px")}),destructive:!0,onPress:function(){return alerts.showConfirmationAlert({title:lang.format("alert.log_out.title",{}),content:lang.format("alert.log_out.body",{}),onConfirm:function(){useAuthorizationStore.getState().setToken(null),useCacheStore.getState().updateData(null),toasts.showToast(lang.format("toast.logout",{}),assets.getAssetIDByName("ic_logout_24px"))}})}}),common.React.createElement(FormRow$1,{label:lang.format("settings.auth.delete_data.title",{}),subLabel:lang.format("settings.auth.delete_data.description",{}),leading:common.React.createElement(FormRow$1.Icon,{source:assets.getAssetIDByName("TrashIcon")}),onPress:function(){return alerts.showConfirmationAlert({title:lang.format("alert.delete_data.title",{}),content:lang.format("alert.delete_data.body",{}),confirmText:lang.format("alert.delete_data.confirm",{}),confirmColor:"red",onConfirm:async function(){await deleteData(),useAuthorizationStore.getState().setToken(null),useCacheStore.getState().updateData(null),toasts.showToast(lang.format("toast.deleted_data",{}),assets.getAssetIDByName("TrashIcon"))}})}})):common.React.createElement(FormRow$1,{label:lang.format("settings.auth.authorize",{}),leading:common.React.createElement(FormRow$1.Icon,{source:assets.getAssetIDByName("LinkIcon")}),trailing:FormRow$1.Arrow,onPress:openOauth2Modal})),common.React.createElement(BetterTableRowGroup,{title:lang.format("settings.manage_data.title",{}),icon:assets.getAssetIDByName("UserIcon"),padding:!isAuthorized()||!data},isAuthorized()&&data?common.React.createElement(common.React.Fragment,null,common.React.createElement(FormRow$1,{label:lang.format("settings.manage_data.save_data.title",{}),subLabel:lang.format("settings.manage_data.save_data.description",{}),leading:isBusy.includes("save_api")?common.React.createElement(common.ReactNative.ActivityIndicator,{size:"small"}):common.React.createElement(FormRow$1.Icon,{source:assets.getAssetIDByName("UploadIcon")}),onPress:function(){return alerts.showConfirmationAlert({title:lang.format("alert.save_data.title",{}),content:lang.format("alert.save_data.body",{}),confirmText:lang.format("alert.save_data.confirm",{}),onConfirm:async function(){setBusy("save_api");try{const everything=await grabEverything();await saveData(everything),useCacheStore.getState().updateData(fillData(everything)),toasts.showToast(lang.format("toast.saved_data",{}),assets.getAssetIDByName("CircleCheckIcon-primary"))}catch{}unBusy("save_api")}})}}),common.React.createElement(FormRow$1,{label:lang.format("sheet.import_data.title",{}),subLabel:lang.format("settings.manage_data.import_data.description",{}),leading:isBusy.includes("import_api")?common.React.createElement(common.ReactNative.ActivityIndicator,{size:"small"}):common.React.createElement(FormRow$1.Icon,{source:assets.getAssetIDByName("DownloadIcon")}),onPress:function(){openSheet(ImportActionSheet,{navigation}),setImportCallback(function(x){return x?setBusy("import_api"):unBusy("import_api")})}}),common.React.createElement(LineDivider,{addPadding:!0}),common.React.createElement(FormRow$1,{label:lang.format("settings.manage_data.download_compressed.title",{}),subLabel:lang.format("settings.manage_data.download_compressed.description",{}),leading:isBusy.includes("download_compressed")?common.React.createElement(common.ReactNative.ActivityIndicator,{size:"small"}):common.React.createElement(FormRow$1.Icon,{source:assets.getAssetIDByName("DownloadIcon")}),onPress:async function(){if(isBusy.length)return;setBusy("download_compressed");let data2;try{data2=await getRawData()}catch{return unBusy("download_compressed")}try{const file=`CloudSync_${new Array(5).fill(0).map(function(){return Math.floor(Math.random()*9)+1}).join("")}.txt`;await RNFS.writeFile(RNFS.DownloadDirectoryPath+"/"+file,data2),toasts.showToast(`Downloaded as ${file}`,assets.getAssetIDByName("FileIcon"))}catch(e){toasts.showToast(e.toString(),assets.getAssetIDByName("CircleXIcon"))}unBusy("download_compressed")}}),common.React.createElement(FormRow$1,{label:lang.format("settings.manage_data.import_compressed.title",{}),subLabel:lang.format("settings.manage_data.import_compressed.description",{}),leading:isBusy.includes("import_compressed")?common.React.createElement(common.ReactNative.ActivityIndicator,{size:"small"}):common.React.createElement(FormRow$1.Icon,{source:assets.getAssetIDByName("UploadIcon")}),onPress:async function(){if(isBusy.length)return;setBusy("import_compressed");let text;try{const{fileCopyUri,type}=await DocumentPicker.pickSingle({type:DocumentPicker.types.plainText,mode:"open",copyTo:"cachesDirectory"});type==="text/plain"&&fileCopyUri&&(text=await RNFS.readFile(fileCopyUri.slice(5),"utf8"))}catch(e){DocumentPicker.isCancel(e)||toasts.showToast(lang.format(e.toString(),{}),assets.getAssetIDByName("CircleXIcon"))}if(unBusy("import_compressed"),!text)return;let data2;try{data2=await decompressRawData(text)}catch{return unBusy("import_compressed")}openSheet(ImportActionSheet,{data:data2,navigation}),unBusy("import_compressed"),setImportCallback(function(val){return val?setBusy("import_compressed"):unBusy("import_compressed")})}})):isAuthorized()?common.React.createElement(common.ReactNative.ActivityIndicator,{size:"small",style:{flex:1}}):common.React.createElement(Text$1,{variant:"text-md/semibold",color:"TEXT_NORMAL",align:"center"},lang.format("settings.label.auth_needed",{}))),common.React.createElement(View,{style:{height:12}}))}let syncTimeout=0;function debounceSync(run){clearTimeout(syncTimeout),syncTimeout=setTimeout(run,1500)}const{FormSection}=components.Forms,getScreens=metro.findByName("getScreens"),settingsModule=metro.findByName("UserSettingsOverviewWrapper",!1),styles=common.stylesheet.createThemedStyleSheet({container:{flex:1,backgroundColor:ui.semanticColors.BACKGROUND_MOBILE_PRIMARY}});function patchSettingsPin(shouldAppear,render,you){const patches2=[],unpatch=patcher$1.after("default",settingsModule,function(_,ret){unpatch();const Overview=utils.findInReactTree(ret.props.children,function(i){return i.type&&i.type.name==="UserSettingsOverview"});patches2.push(patcher$1.after("render",Overview.type.prototype,function(_2,param){let{props:{children}}=param;const titles=[common.i18n.Messages.BILLING_SETTINGS,common.i18n.Messages.PREMIUM_SETTINGS];children=utils.findInReactTree(children,function(t){return t.children[1].type===FormSection}).children;const index2=children.findIndex(function(c){return titles.includes(c?.props.label)});shouldAppear()&&children.splice(index2===-1?4:index2,0,render({}))}))},!0);if(patches2.push(unpatch),getScreens&&you){const screenKey=`BUNNY_PLUGIN_${common.lodash.snakeCase(you.key).toUpperCase()}`,Page=you.page.render,component=common.React.memo(function(param){let{navigation}=param;return managePage(utils.without({...you.page,title:you.title()},"noErrorBoundary","render"),navigation),common.React.createElement(common.ReactNative.View,{style:styles.container},you.page.noErrorBoundary?common.React.createElement(Page,null):common.React.createElement(components.ErrorBoundary,null,common.React.createElement(Page,null)))});let predicateReq=!0;patches2.push(function(){return predicateReq=!1});const rendererConfig={[screenKey]:{type:"route",title:function(){return you.title()},usePredicate:function(){return predicateReq&&(shouldAppear?shouldAppear():!0)},useTrailing:you.trailing,icon:you.icon,parent:null,screen:{route:`BunnyPlugin${common.lodash.chain(you.key).camelCase().upperFirst().value()}`,getComponent:function(){return component}}}},manipulateSections=function(ret,nw){var _cloned_,_section_settings;const cloned=[...ret],sections=nw?cloned==null||(_cloned_=cloned[0])===null||_cloned_===void 0?void 0:_cloned_.sections:cloned;if(!Array.isArray(sections))return sections;const title="Bunny",section=sections.find(function(x){return x?.title===title||x?.label===title});return section&&!(!(section==null||(_section_settings=section.settings)===null||_section_settings===void 0)&&_section_settings.includes(screenKey))&&section.settings.push(screenKey),cloned},oldYouPatch=function(){const layout=metro.findByProps("useOverviewSettings"),titleConfig=metro.findByProps("getSettingTitleConfig"),stuff=metro.findByProps("SETTING_RELATIONSHIPS","SETTING_RENDERER_CONFIGS"),OLD_getterFunction="getSettingSearchListItems",NEW_getterFunction="getSettingListItems",oldGettersModule=metro.findByProps(OLD_getterFunction),getterFunctionName=oldGettersModule?OLD_getterFunction:NEW_getterFunction,getters=oldGettersModule??metro.findByProps(NEW_getterFunction);if(!getters||!layout)return!1;patches2.push(patcher$1.after("useOverviewSettings",layout,function(_,ret){return manipulateSections(ret)})),patches2.push(patcher$1.after("getSettingTitleConfig",titleConfig,function(_,ret){return{...ret,[screenKey]:you.title}})),patches2.push(patcher$1.after(getterFunctionName,getters,function(param,ret){let[settings]=param;return[...settings.includes(screenKey)?[{type:"setting_search_result",ancestorRendererData:rendererConfig[screenKey],setting:screenKey,title:function(){return you.title},breadcrumbs:["Bunny","Nexpid"],icon:rendererConfig[screenKey].icon}]:[],...ret]}));const oldRelationships=stuff.SETTING_RELATIONSHIPS,oldRendererConfigs=stuff.SETTING_RENDERER_CONFIGS;return stuff.SETTING_RELATIONSHIPS={...oldRelationships,[screenKey]:null},stuff.SETTING_RENDERER_CONFIGS={...oldRendererConfigs,...rendererConfig},patches2.push(function(){stuff.SETTING_RELATIONSHIPS=oldRelationships,stuff.SETTING_RENDERER_CONFIGS=oldRelationships}),!0};(function(){const settingsListComponents=metro.findByProps("SearchableSettingsList"),settingConstantsModule=metro.findByProps("SETTING_RENDERER_CONFIG"),gettersModule=metro.findByProps("getSettingListItems");if(!gettersModule||!settingsListComponents||!settingConstantsModule)return!1;patches2.push(patcher$1.before("type",settingsListComponents.SearchableSettingsList,function(ret){return manipulateSections(ret,!0)})),patches2.push(patcher$1.after("getSettingListSearchResultItems",gettersModule,function(_,ret){for(const s of ret)s.setting===screenKey&&(s.breadcrumbs=["Bunny","Nexpid"])}));const oldRendererConfig=settingConstantsModule.SETTING_RENDERER_CONFIG;return settingConstantsModule.SETTING_RENDERER_CONFIG={...oldRendererConfig,...rendererConfig},patches2.push(function(){settingConstantsModule.SETTING_RENDERER_CONFIG=oldRendererConfig}),!0})()||oldYouPatch()}return function(){return patches2.forEach(function(x){return x()})}}const{FormRow}=components.Forms;function SettingsSection(){const navigation=common.NavigationNative.useNavigation();return React.createElement(components.ErrorBoundary,null,React.createElement(FormRow,{label:lang.format("plugin.name",{}),leading:React.createElement(FormRow.Icon,{source:assets.getAssetIDByName(plugin.manifest.vendetta.icon)}),trailing:FormRow.Arrow,onPress:function(){return navigation.push("VendettaCustomPage",{title:lang.format("plugin.name",{}),render:Settings})}}))}function patcher(){const patches2=[];return patches2.push(patchSettingsPin(function(){return vstorage.config.addToSettings},function(){return React.createElement(SettingsSection,null)},{key:_vendetta.plugin.manifest.name,icon:assets.getAssetIDByName(plugin.manifest.vendetta.icon),title:function(){return lang.format("plugin.name",{})},page:{render:Settings}})),patches2.push(unsubAuthStore),patches2.push(unsubCacheStore),function(){return patches2.forEach(function(x){return x()})}}const vstorage=plugin.storage,fillCache=async function(){return getData().then(function(x){return useCacheStore.getState().updateData(x)})};function isPluginProxied(id){return[_vendetta.constants.PROXY_PREFIX,_vendetta.constants.BUNNY_PROXY_PREFIX].some(function(x){return id.startsWith(x)})}function canImport(id){return!id.includes("cloud-sync")}const autoSync=async function(){if(!vstorage.config.autoSync)return;const cache=useCacheStore.getState(),everything=await grabEverything();JSON.stringify(utils.without(cache.data,"at"))!==JSON.stringify(everything)&&debounceSync(async function(){await saveData(everything),cache.updateData(fillData(everything))})},emitterSymbol=Symbol.for("vendetta.storage.emitter"),lang=new Lang("cloud_sync"),patches=[];var index={onLoad:function(){vstorage.config??(vstorage.config={autoSync:!1,addToSettings:!0,ignoredPlugins:[]}),vstorage.custom??(vstorage.custom={host:null,clientId:null});const emitters={plugins:plugins.plugins[emitterSymbol],themes:themes.themes[emitterSymbol]};emitters.plugins.on("SET",autoSync),emitters.themes.on("SET",autoSync),emitters.plugins.on("DEL",autoSync),emitters.themes.on("DEL",autoSync),patches.push(function(){emitters.plugins.off("SET",autoSync),emitters.themes.off("SET",autoSync),emitters.plugins.off("DEL",autoSync),emitters.themes.off("DEL",autoSync)}),useAuthorizationStore.persist.onFinishHydration(function(){return useAuthorizationStore.getState().isAuthorized()&&fillCache()}),patches.push(patcher())},onUnload:function(){return patches.forEach(function(x){return x()})},settings:Settings};return exports.canImport=canImport,exports.default=index,exports.fillCache=fillCache,exports.isPluginProxied=isPluginProxied,exports.lang=lang,exports.vstorage=vstorage,Object.defineProperty(exports,"__esModule",{value:!0}),exports})({},vendetta,vendetta.plugin,vendetta.plugins,vendetta.themes,vendetta.utils,vendetta.metro,vendetta.metro.common,vendetta.storage,vendetta.ui.alerts,vendetta.ui.assets,vendetta.ui.components,vendetta.ui.toasts,vendetta.ui,vendetta.patcher);
